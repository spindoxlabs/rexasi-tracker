FROM nvcr.io/nvidia/l4t-ml:r36.2.0-py3 as rosbuild

ARG UBUNTU_CODENAME=jammy
ARG ARCH=arm64
ARG ROS_DISTRO=humble

SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive 

RUN apt-mark hold '*opencv*'

RUN apt update && apt upgrade -y && apt install -y software-properties-common git
RUN add-apt-repository universe
RUN apt update && apt install -y curl apt-transport-https gnupg
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$ARCH signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN apt install -y apt-utils libcairo2-dev g++ unzip zip build-essential openjdk-11-jdk libgirepository1.0-dev libreadline-dev libncurses-dev  libssl-dev libsqlite3-dev

# build ROS2
RUN apt update && apt install -y \
  python3-flake8-docstrings \
  python3-pip \
  python3-pytest-cov \
  ros-dev-tools

#RUN python3 -m pip install -U \
#  flake8-blind-except \
#  flake8-builtins \
#  flake8-class-newline \
#  flake8-comprehensions \
#  flake8-deprecated \
#  flake8-import-order \
#  flake8-quotes \
#  pytest-repeat \
#  pytest-rerunfailures \
#  catkin_pkg \
#  pytest

RUN python3 -m pip install -U \
   flake8-blind-except \
   flake8-builtins \
   flake8-class-newline \
   flake8-comprehensions \
   flake8-deprecated \
   flake8-import-order \
   flake8-quotes \
   "pytest>=5.3" \
   pytest-repeat \
   pytest-rerunfailures

RUN apt update && apt install -y python3-colcon-common-extensions \
  python3-distutils ffmpeg alsa-base alsa-utils kmod kbd bash python3-pip \ 
  python3-pytest libopenblas-dev python3-opencv libboost-python-dev 
#ros-$ROS_DISTRO-diagnostic-updater

RUN rm -rf /usr/include/python2.7/
RUN apt install -y python-is-python3

# install ros (version $ROS_DISTRO)
RUN mkdir -p /opt/ros/$ROS_DISTRO/src
WORKDIR /opt/ros/$ROS_DISTRO

RUN vcs import --input https://raw.githubusercontent.com/ros2/ros2/$ROS_DISTRO/ros2.repos src
RUN rosdep init
RUN rosdep update
RUN rosdep install --from-paths src --ignore-src -y --skip-keys "libopencv-dev libopencv-contrib-dev fastcdr rti-connext-dds-6.0.1 urdfdom_headers"
RUN colcon build --symlink-install

# ROS workspace
RUN mkdir -p /ros_ws/src
WORKDIR /ros_ws

# install opencv_vision
RUN git clone https://github.com/ros-perception/vision_opencv.git -b $ROS_DISTRO src/vision_opencv
RUN source /opt/ros/$ROS_DISTRO/install/setup.bash && colcon build --packages-select cv_bridge image_geometry vision_opencv  --symlink-install

#RUN wget http://ports.ubuntu.com/ubuntu-ports/pool/universe/libd/libde265/libde265-0_1.0.8-1ubuntu0.3_arm64.deb && dpkg -i libde265-0_1.0.8-1ubuntu0.3_arm64.deb


# install lidar driver
RUN git clone https://github.com/SICKAG/libsick_ldmrs.git src/libsick_ldmrs
RUN git clone https://github.com/SICKAG/sick_scan_xd.git src/sick_scan_xd
RUN source /opt/ros/$ROS_DISTRO/install/setup.bash && colcon build --packages-select libsick_ldmrs --event-handlers console_direct+
RUN source /opt/ros/$ROS_DISTRO/install/setup.bash && colcon build --packages-select sick_scan_xd --cmake-args " -DSCANSEGMENT_XD=0" " -DLDMRS=0" " -DROS_VERSION=2" --event-handlers console_direct+

COPY ros/people_tracker/libs/dr_spaam src/dr_spaam
RUN cd src/dr_spaam && python3 setup.py install

ADD requirements.txt .
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install -r requirements.txt

# update libs
RUN python3 -m pip install --upgrade scipy pydantic

# compile realsense libs
RUN apt install -y bash libxinerama-dev libxcursor-dev libusb-1.0-0-dev python3-dev libxi-dev
WORKDIR /realsense
RUN wget https://github.com/IntelRealSense/librealsense/raw/master/scripts/libuvc_installation.sh
RUN chmod +x ./libuvc_installation.sh
RUN ./libuvc_installation.sh
COPY 99-realsense-libusb.rules /etc/udev/rules.d/

WORKDIR /ros_ws
RUN git clone https://github.com/ros/diagnostics.git src/diagnostic
RUN source /opt/ros/$ROS_DISTRO/install/setup.bash && colcon build --packages-select diagnostic_updater

COPY ros_entrypoint.sh /

# install realsense_ros
WORKDIR /ros_ws
RUN git clone https://github.com/IntelRealSense/realsense-ros.git src/realsense-ros
RUN source /ros_entrypoint.sh && rosdep install -i --from-paths src/realsense-ros --rosdistro $ROS_DISTRO --skip-keys="xacro librealsense2 libopencv-dev libopencv-contrib-dev" -y
RUN source /ros_entrypoint.sh && colcon build --packages-select realsense2_camera realsense2_camera_msgs realsense2_description --event-handlers console_direct+

RUN python3 -m pip install pyrealsense2

ENV PYTHONPATH=$PYTHONPATH:/usr/local/lib
ENV PYTHONPATH=$PYTHONPATH:/usr/local/OFF/

COPY ros/people_tracker people_tracker
COPY ros/people_tracker_msgs people_tracker_msgs
RUN source /opt/ros/$ROS_DISTRO/install/setup.bash && colcon build --packages-select people_tracker
RUN source /opt/ros/$ROS_DISTRO/install/setup.bash && colcon build --packages-select people_tracker_msgs

ENV PYTHONPATH=$PYTHONPATH:/usr/lib/python3.8/site-packages/dr_spaam-1.2.0-py3.8.egg

COPY ros_entrypoint.sh /
ENTRYPOINT ["/ros_entrypoint.sh"]
